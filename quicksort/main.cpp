#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN

#include "doctest.h"
#include "quicksort.h"
#include <vector>

TEST_CASE ("Basic test") {
    std::vector<long> input = {7, 2, -3, 5, 3, -2, 8, 9, 1, -1, 4, 10, 6, 0};
    std::vector<long> output = {-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    quicksort(input);
    CHECK(input == output);
}

TEST_CASE ("Empty") {
    std::vector<long> input = {};
    std::vector<long> output = {};
    quicksort(input);
    CHECK(input == output);
}

TEST_CASE ("One element") {
    std::vector<long> input = {1};
    std::vector<long> output = {1};
    quicksort(input);
    CHECK(input == output);
}

TEST_CASE ("Two elements") {
    std::vector<long> input = {2, 1};
    std::vector<long> output = {1, 2};
    quicksort(input);
    CHECK(input == output);
}

TEST_CASE ("Already sorted") {
    std::vector<long> input = {-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    std::vector<long> output = {-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    quicksort(input);
    CHECK(input == output);
}

TEST_CASE ("Almost sorted") {
    std::vector<long> input = {-3, -1, -2, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10};
    std::vector<long> output = {-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    quicksort(input);
    CHECK(input == output);
}

TEST_CASE ("Reversed") {
    std::vector<long> input = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3};
    std::vector<long> output = {-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    quicksort(input);
    CHECK(input == output);
}

TEST_CASE ("Repeated elements") {
    std::vector<long> input = {1, 2, 5, 5, 2, 1, 7, -1, -3, 7, -1, 0, 0, 1, -3, -3};
    std::vector<long> output = {-3, -3, -3, -1, -1, 0, 0, 1, 1, 1, 2, 2, 5, 5, 7, 7};
    quicksort(input);
    CHECK(input == output);
}

TEST_CASE ("All the same") {
    std::vector<long> input = {1, 1, 1, 1, 1, 1};
    std::vector<long> output = {1, 1, 1, 1, 1, 1};
    quicksort(input);
    CHECK(input == output);
}

TEST_CASE ("Large dataset") {
    // Values generated using Python
    std::vector<long> input = {
            -7422, -6520, -5353, -7501, -88, 1104, -7971, 1365, -5102, 4707, 4350, -7686, -3564, 6793, 512, -2204,
            -8127, 4865, -547, 4398, -9218, -3793, -8334, 2860, -6963, -552, -3589, 1602, -6256, -3894, 8609, -2894,
            -6169, 550, 7901, 3150, 3997, -4861, -5840, -8446, -4831, 2853, 467, 2171, -2541, 922, -4236, -6437, -3114,
            8286, 5251, -9315, -6899, 3240, -4964, 8505, -4227, -2863, 3884, -5721, 7777, -3511, -1082, 5133, 1074,
            7886, -8504, -8364, 7417, -3314, 682, -1017, 7759, -5798, -5178, 608, -6445, 2564, -5170, -1446, -5234,
            9266, 7222, 8977, -7617, -25, 4267, 8060, -7559, 2986, -738, -1695, 1933, -5408, 2342, 4618, 6053, -740,
            -4579, 3535, -1443, -3624, 63, -2045, -8187, -3623, -2540, -855, -4665, -5357, -6072, 4259, 97, -2520,
            -4296, -4469, -6630, 1567, -4644, 8501, -7725, -5935, -6926, -5380, 8845, 9936, -3279, -1703, 1787, 943,
            6779, 7885, 1946, -5431, -7388, 1199, 8699, -3962, -5437, -889, 7014, -6941, -1622, 2718, 8850, 5710, 379,
            -1507, 7545, -1203, 5455, 7391, 6097, 4696, 3758, 8389, 3144, 2783, 3610, -198, 22, 1019, 9371, -3945,
            -4658, -1138, 3372, -648, 8186, -8719, 6808, -4850, 4321, -1011, 3957, 9174, -8993, -9353, 9340, -7454,
            -1044, -4411, -8388, 5697, 4711, 1278, 7817, -7623, -9690, -6819, 8055, -9198, 1525, 8060, 1636, 8404, 7024,
            -3448, 2220, -7796, -1292, -2664, -6138, 1675, -74, 1568, 7313, -4772, -4167, -8646, -5773, -4049, 6244,
            -979, -1917, 9594, 3105, -9861, 8496, 1210, -2294, 3717, 3650, -5513, 2103, 4255, 7161, 3788, -8627, 5659,
            -5220, 2421, 614, 3943, -4526, 8001, 1878, -4661, -2729, -994, 7581, -7932, -3468, 8931, 4130, -9427, -6644,
            2803, -1758, -5456, -4128, -42, 4855, 1982, -3703, 405, 4100, -2608, -3583, 2487, -4739, 4918, -3926, -4060,
            4792, -4405, 7626, -9885, 487, 8344, 3277, -3440, -109, 9329, 8580, -9432, -8157, 8906, 7844, -6553, -5405,
            1923, -989, -8734, -3303, 6627, 4143, -828, -33, 2551, -3131, -4546, -5447, 4822, 5490, 8372, 986, 5696,
            6712, -9143, -1456, -4168, 7719, 5119, 9523, -3578, 7877, 7669, -8430, -2773, -5221, -4391, 6260, 7311, 994,
            -4007, 2902, -3869, 9040, -6761, 8625, 5480, 1209, 6392, -7697, 2825, 9974, -3901, 1341, -2515, 5663, 1727,
            -3800, -9740, 9038, -594, 498, 5020, 6080, 3960, 2343, 6120, -8100, -1477, 2580, -3195, 9590, -2281, -7032,
            -5092, -8246, 1502, 2226, 8136, -6561, -1364, -3437, -2148, -7520, -4287, 144, 3175, 3998, 1387, -7776,
            5718, -9206, -2975, -7602, -5251, -7705, 438, -1937, 7627, -9281, 4938, -3167, -8095, 7029, 4334, 2195,
            2664, 8633, -1925, -9918, -2254, -6203, -1180, 8703, 9709, -1597, -9706, 958, 1262, 5920, 959, -9074, 5563,
            1025, 6120, 4349, -6061, -3465, -9084, 5990, -3637, -9998, -9788, 1075, -6842, 1865, 7820, -7619, -3759,
            -1818, -9013, -6293, -1362, 5643, -4795, 3815, -2515, 9827, -7489, 4547, 4115, 8, 6271, 7628, 9232, -8848,
            5896, -3737, 9199, 2790, -5166, -530, -1419, -991, -4858, 3913, 6822, 8588, 8324, -3256, 1729, -3651, 7064,
            -5275, 2998, 725, -5043, 2918, 9462, 6959, 7210, 2645, 99, -2592, -4896, 3904, -9448, -4238, 3514, -3526,
            610, 5417, -9050, 2465, 2074, -2134, 7491, 4678, 2782, -1944, 1615, 1115, -2551, -1790, -7454, 7262, 3143,
            -1892, 3221, -9008, 4046, -5154, -3077, -5395, -5705, 699, 6669, -5246, 9200, -5563, -926, 8989, 9540,
            -8194, -3188
    };
    std::vector<long> output = {
            -9998, -9918, -9885, -9861, -9788, -9740, -9706, -9690, -9448, -9432, -9427, -9353, -9315, -9281, -9218,
            -9206, -9198, -9143, -9084, -9074, -9050, -9013, -9008, -8993, -8848, -8734, -8719, -8646, -8627, -8504,
            -8446, -8430, -8388, -8364, -8334, -8246, -8194, -8187, -8157, -8127, -8100, -8095, -7971, -7932, -7796,
            -7776, -7725, -7705, -7697, -7686, -7623, -7619, -7617, -7602, -7559, -7520, -7501, -7489, -7454, -7454,
            -7422, -7388, -7032, -6963, -6941, -6926, -6899, -6842, -6819, -6761, -6644, -6630, -6561, -6553, -6520,
            -6445, -6437, -6293, -6256, -6203, -6169, -6138, -6072, -6061, -5935, -5840, -5798, -5773, -5721, -5705,
            -5563, -5513, -5456, -5447, -5437, -5431, -5408, -5405, -5395, -5380, -5357, -5353, -5275, -5251, -5246,
            -5234, -5221, -5220, -5178, -5170, -5166, -5154, -5102, -5092, -5043, -4964, -4896, -4861, -4858, -4850,
            -4831, -4795, -4772, -4739, -4665, -4661, -4658, -4644, -4579, -4546, -4526, -4469, -4411, -4405, -4391,
            -4296, -4287, -4238, -4236, -4227, -4168, -4167, -4128, -4060, -4049, -4007, -3962, -3945, -3926, -3901,
            -3894, -3869, -3800, -3793, -3759, -3737, -3703, -3651, -3637, -3624, -3623, -3589, -3583, -3578, -3564,
            -3526, -3511, -3468, -3465, -3448, -3440, -3437, -3314, -3303, -3279, -3256, -3195, -3188, -3167, -3131,
            -3114, -3077, -2975, -2894, -2863, -2773, -2729, -2664, -2608, -2592, -2551, -2541, -2540, -2520, -2515,
            -2515, -2294, -2281, -2254, -2204, -2148, -2134, -2045, -1944, -1937, -1925, -1917, -1892, -1818, -1790,
            -1758, -1703, -1695, -1622, -1597, -1507, -1477, -1456, -1446, -1443, -1419, -1364, -1362, -1292, -1203,
            -1180, -1138, -1082, -1044, -1017, -1011, -994, -991, -989, -979, -926, -889, -855, -828, -740, -738, -648,
            -594, -552, -547, -530, -198, -109, -88, -74, -42, -33, -25, 8, 22, 63, 97, 99, 144, 379, 405, 438, 467,
            487, 498, 512, 550, 608, 610, 614, 682, 699, 725, 922, 943, 958, 959, 986, 994, 1019, 1025, 1074, 1075,
            1104, 1115, 1199, 1209, 1210, 1262, 1278, 1341, 1365, 1387, 1502, 1525, 1567, 1568, 1602, 1615, 1636, 1675,
            1727, 1729, 1787, 1865, 1878, 1923, 1933, 1946, 1982, 2074, 2103, 2171, 2195, 2220, 2226, 2342, 2343, 2421,
            2465, 2487, 2551, 2564, 2580, 2645, 2664, 2718, 2782, 2783, 2790, 2803, 2825, 2853, 2860, 2902, 2918, 2986,
            2998, 3105, 3143, 3144, 3150, 3175, 3221, 3240, 3277, 3372, 3514, 3535, 3610, 3650, 3717, 3758, 3788, 3815,
            3884, 3904, 3913, 3943, 3957, 3960, 3997, 3998, 4046, 4100, 4115, 4130, 4143, 4255, 4259, 4267, 4321, 4334,
            4349, 4350, 4398, 4547, 4618, 4678, 4696, 4707, 4711, 4792, 4822, 4855, 4865, 4918, 4938, 5020, 5119, 5133,
            5251, 5417, 5455, 5480, 5490, 5563, 5643, 5659, 5663, 5696, 5697, 5710, 5718, 5896, 5920, 5990, 6053, 6080,
            6097, 6120, 6120, 6244, 6260, 6271, 6392, 6627, 6669, 6712, 6779, 6793, 6808, 6822, 6959, 7014, 7024, 7029,
            7064, 7161, 7210, 7222, 7262, 7311, 7313, 7391, 7417, 7491, 7545, 7581, 7626, 7627, 7628, 7669, 7719, 7759,
            7777, 7817, 7820, 7844, 7877, 7885, 7886, 7901, 8001, 8055, 8060, 8060, 8136, 8186, 8286, 8324, 8344, 8372,
            8389, 8404, 8496, 8501, 8505, 8580, 8588, 8609, 8625, 8633, 8699, 8703, 8845, 8850, 8906, 8931, 8977, 8989,
            9038, 9040, 9174, 9199, 9200, 9232, 9266, 9329, 9340, 9371, 9462, 9523, 9540, 9590, 9594, 9709, 9827, 9936,
            9974
    };
    quicksort(input);
    CHECK(input == output);
}